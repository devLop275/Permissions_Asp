@model PermissionBasedAuthorizationIntDotNet5.Models.Author
@inject IAuthorizationService AuthorizationService
@using PermissionBasedAuthorizationIntDotNet5.Contants

@{
    ViewData["Title"] = "Author";
}

<h4>Author</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" readonly class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Author.FullNameAuthorEdit).Result.Succeeded || Model.Id == null)
            {
                <div class="form-group">
                    <label asp-for="FullName" class="control-label"></label>
                    <input asp-for="FullName" class="form-control" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="FullName" class="control-label"></label>
                    <input asp-for="FullName" readonly class="form-control" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
            }


            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Author.PhoneAuhorEdit).Result.Succeeded || Model.Id==null)
            {
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" class="form-control" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" readonly class="form-control" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
            }


            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Author.CommantaireAuthorEdir).Result.Succeeded || Model.Id == null)
            {
                <div class="form-group">
                    <label asp-for="Commantaire" class="control-label"></label>
                    <input asp-for="Commantaire" class="form-control" />
                    <span asp-validation-for="Commantaire" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="Commantaire" class="control-label"></label>
                    <input asp-for="Commantaire" readonly class="form-control" />
                    <span asp-validation-for="Commantaire" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-outline-info">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
